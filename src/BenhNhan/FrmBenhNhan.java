/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BenhNhan;


import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


/**
 *
 * @author Huỳnh Cường
 */

public class FrmBenhNhan extends javax.swing.JFrame {
    
    BenhNhanDAO bnDAO = new BenhNhanDAO(); // Lấy dữ liệu từ class BenhNhanDAO.java
    
    SimpleDateFormat date_format = new SimpleDateFormat("dd/MM/yyyy"); // Dùng để sửa thứ tự dd/MM/yyyy
    
    DefaultTableModel tbModel = new DefaultTableModel(); //DefaultTableModel lưu trữ dữ liệu cho JTable trong một Vectors 
    
    int idBenhNhan = -1;
   
    public FrmBenhNhan() {
        initComponents();   
        setLocationRelativeTo(null); // Đưa form ra giữa màn hình khi run 
        fillDataTable();
        LoadDataToArrayList();     
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbDSBenhNhan = new javax.swing.JLabel();
        lbMaBN = new javax.swing.JLabel();
        lbHoTenBN = new javax.swing.JLabel();
        lbNgaySinh = new javax.swing.JLabel();
        lbGioiTinh = new javax.swing.JLabel();
        lbDiaChi = new javax.swing.JLabel();
        lbSDT = new javax.swing.JLabel();
        lbGhiChu = new javax.swing.JLabel();
        lbStatus = new javax.swing.JLabel();
        txtMaBN = new javax.swing.JTextField();
        txtHoTenBN = new javax.swing.JTextField();
        txtNgaySinh = new javax.swing.JTextField();
        cbbGioiTinh = new javax.swing.JComboBox<>();
        txtDiaChi = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        txtGhiChu = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TbDSBenhNhan = new javax.swing.JTable();
        btnTimKiemTheoMaBN = new javax.swing.JButton();
        btnResetForm = new javax.swing.JButton();
        btnXuatFileExcel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DANH SÁCH BỆNH NHÂN");
        setResizable(false);

        lbDSBenhNhan.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lbDSBenhNhan.setForeground(new java.awt.Color(255, 0, 0));
        lbDSBenhNhan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDSBenhNhan.setText("DANH SÁCH BỆNH NHÂN");

        lbMaBN.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbMaBN.setText("Mã BN:");

        lbHoTenBN.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbHoTenBN.setText("Họ tên BN:");

        lbNgaySinh.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbNgaySinh.setText("Ngày sinh:");

        lbGioiTinh.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbGioiTinh.setText("Giới tính:");

        lbDiaChi.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbDiaChi.setText("Địa chỉ:");

        lbSDT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbSDT.setText("SĐT:");

        lbGhiChu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbGhiChu.setText("Ghi chú:");

        lbStatus.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lbStatus.setText("Status:");

        txtMaBN.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtMaBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaBNActionPerformed(evt);
            }
        });

        txtHoTenBN.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtHoTenBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHoTenBNActionPerformed(evt);
            }
        });

        txtNgaySinh.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        cbbGioiTinh.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbbGioiTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ" }));
        cbbGioiTinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbGioiTinhActionPerformed(evt);
            }
        });

        txtDiaChi.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtSDT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtSDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSDTActionPerformed(evt);
            }
        });
        txtSDT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSDTKeyPressed(evt);
            }
        });

        txtGhiChu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtGhiChu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGhiChuActionPerformed(evt);
            }
        });
        txtGhiChu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtGhiChuKeyPressed(evt);
            }
        });

        btnThem.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnXoa.setText("Xoá");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnThoat.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        TbDSBenhNhan.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        TbDSBenhNhan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã BN", "Họ tên BN", "Ngày sinh", "Giới tính", "Địa chỉ", "SĐT", "Ghi Chú"
            }
        ));
        TbDSBenhNhan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TbDSBenhNhanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TbDSBenhNhan);

        btnTimKiemTheoMaBN.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnTimKiemTheoMaBN.setText("Tìm kiếm theo mã BN");
        btnTimKiemTheoMaBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemTheoMaBNActionPerformed(evt);
            }
        });

        btnResetForm.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnResetForm.setText("Làm mới");
        btnResetForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetFormActionPerformed(evt);
            }
        });

        btnXuatFileExcel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnXuatFileExcel.setText("Xuất file excel ");
        btnXuatFileExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatFileExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(lbDSBenhNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lbHoTenBN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lbMaBN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lbNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lbDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbSDT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(25, 25, 25)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtHoTenBN, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(txtMaBN, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGap(29, 29, 29)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(lbGioiTinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(lbGhiChu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(btnSua)
                                                    .addGap(26, 26, 26)))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(btnXoa)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(cbbGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(btnResetForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(btnTimKiemTheoMaBN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                .addComponent(txtGhiChu)))))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(88, 88, 88)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnThem)
                                        .addComponent(lbStatus))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnXuatFileExcel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnThoat, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbDSBenhNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaBN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbGioiTinh)
                        .addComponent(cbbGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnTimKiemTheoMaBN)
                        .addComponent(lbMaBN)
                        .addComponent(btnXuatFileExcel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtHoTenBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbHoTenBN))
                    .addComponent(btnResetForm, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbNgaySinh)
                            .addComponent(lbGhiChu))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbDiaChi)
                            .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGhiChu)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSDT)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnXoa)
                    .addComponent(btnThoat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Hàm lấy dữ liệu từ SQL đưa vào bảng bệnh nhân
    public void fillDataTable(){ 
        DefaultTableModel tbModel = (DefaultTableModel) TbDSBenhNhan.getModel();
        tbModel.setRowCount(0); // Xoá data trong table
        for (ClassBenhNhan bn : bnDAO.getAllBenhNhan()){
            Object dataRow[] = new Object[7];
            dataRow[0] = bn.getMaBN();
            dataRow[1] = bn.getHoTenBN();
            dataRow[2] = date_format.format(bn.getNgaySinh()); // Sửa lại thứ tự dd/mm/yyyy 
            dataRow[3] = bn.getGioiTinh();
            dataRow[4] = bn.getDiaChi();
            dataRow[5] = bn.getSoDienThoai();
            dataRow[6] = bn.getGhiChu();
           
            tbModel.addRow(dataRow);
        }                       
    }
   
    // Hàm bool kiểm tra đúng, sai. Nhập đầy đủ thông tin mới cho thêm bệnh nhân mới
    public boolean checkValidateForm(){
        if (txtMaBN.getText().isEmpty()||
            txtHoTenBN.getText().isEmpty()||
            txtNgaySinh.getText().isEmpty()||
            cbbGioiTinh.getSelectedItem().toString().isEmpty()||
            txtDiaChi.getText().isEmpty()||
            txtSDT.getText().length()<10)      
            
        {
           // JOptionPane.showMessageDialog(this, "Bạn chưa nhập đủ 10 sdt");
            return false;
        }
        else  
        {
            if (txtSDT.getText().length()>10)
            {
            // JOptionPane.showMessageDialog(this, "Bạn chưa nhập đủ 10 sdt");
             return false;
            }
            else {
                return true; 
            }                    
        }     
    }
    
    // Lấy dữ liệu đã nhập get vào TbDSBenhNhan
    public ClassBenhNhan getModel() throws ParseException{
        ClassBenhNhan bn = new ClassBenhNhan();
        bn.setMaBN(Integer.parseInt(txtMaBN.getText().trim()));
        bn.setHoTenBN(txtHoTenBN.getText().trim());
        bn.setNgaySinh(date_format.parse(txtNgaySinh.getText()));
        bn.setGioiTinh(cbbGioiTinh.getSelectedItem().toString());
        bn.setDiaChi(txtDiaChi.getText().trim());
        bn.setSoDienThoai(txtSDT.getText().trim());
        bn.setGhiChu(txtGhiChu.getText().trim());
            
        return bn;
    }
    
    // Đổ dữ liệu lên form, dùng cho envent Mouse Click và tìm kiếm 
    public void setModel (ClassBenhNhan bn){
        txtMaBN.setText(String.valueOf(bn.getMaBN()));
        txtHoTenBN.setText(bn.getHoTenBN());
        txtNgaySinh.setText(date_format.format(bn.getNgaySinh()));
        cbbGioiTinh.setSelectedItem(bn.getGioiTinh());
        txtDiaChi.setText(bn.getDiaChi());
        txtSDT.setText(bn.getSoDienThoai());
        txtGhiChu.setText(bn.getGhiChu());
              
    }
    
    // Hàm thêm 1 bệnh nhân mới
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
       if (!checkValidateForm())
       {
           JOptionPane.showMessageDialog(this, "Bạn chưa nhập đầy đủ thông tin hoặc sđt chưa đủ 10 số, không khoảng cách sđt!"); //Thanh thông báo hiện lên
           lbStatus.setText("Bạn chưa nhập đầy đủ thông tin hoặc sđt chưa đủ 10 số, không có khoảng cách sđt!"); //Thông báo qua dòng labelStatus
           lbStatus.setForeground(Color.red);
       }
       else{
           try {
               ClassBenhNhan bn = getModel();
             //  System.out.println("=>"+bs.toString());
               if (bnDAO.add(bn)>0) {
                   JOptionPane.showMessageDialog(this, "Thêm bệnh nhân mới thành công!"); //Thanh thông báo hiện lên
                   lbStatus.setText("Thêm bệnh nhân mới thành công!"); //Thông báo qua dòng labelStatus
                   lbStatus.setForeground(Color.blue);
                   fillDataTable();
                   LoadDataToArrayList(); 
               }
               else{
                   JOptionPane.showMessageDialog(this, "Thêm bệnh nhân mới thất bại!"); 
                   lbStatus.setText("Thêm bệnh nhân mới thất bại!");
                   lbStatus.setForeground(Color.red);
               }
           } catch (ParseException ex) {
               System.out.println("Error:"+ex.toString());
           }      
       }               
    }//GEN-LAST:event_btnThemActionPerformed

    //Hàm sửa
    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
       if (!checkValidateForm())
       {
           JOptionPane.showMessageDialog(this, "Bạn chưa nhập đầy đủ thông tin hoặc sđt chưa đủ 10 số!");
           lbStatus.setText("Bạn chưa nhập đầy đủ thông tin hoặc sđt chưa đủ 10 số!");
           lbStatus.setForeground(Color.red);
       }
       else {
        try{
            ClassBenhNhan bn = getModel();
            if (bnDAO.update(bn)>0){
                JOptionPane.showMessageDialog(this, "Sửa thông tin bệnh nhân thành công!");
                lbStatus.setText("Sửa thông tin bệnh nhân thành công!");
                lbStatus.setForeground(Color.blue);
                fillDataTable();
                LoadDataToArrayList(); 
            } else {
                JOptionPane.showMessageDialog(this, "Sửa thông tin bệnh nhân thất bại!");
                lbStatus.setText("Sửa thông tin bệnh nhân thất bại!");
                lbStatus.setForeground(Color.red);
            }        
        } catch (Exception ex){
            System.out.println (ex.toString());
        }     
    }
       
    }//GEN-LAST:event_btnSuaActionPerformed

    private void txtMaBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaBNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaBNActionPerformed

    private void txtHoTenBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHoTenBNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHoTenBNActionPerformed

    private void cbbGioiTinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbGioiTinhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbGioiTinhActionPerformed

    // Hàm xoá
    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
    if (bnDAO.delete(idBenhNhan)>0){
        JOptionPane.showMessageDialog(this, "Xoá thông tin bệnh nhân thành công!");
        lbStatus.setText("Xoá thông tin bệnh nhân thành công!"); //Thông báo qua dòng labelStatus
        lbStatus.setForeground(Color.blue);
        fillDataTable();
        LoadDataToArrayList(); 
    }
    else{
        JOptionPane.showMessageDialog(this, "Xoá thông tin bệnh nhân thất bại!");
        lbStatus.setText("Xoá thông tin bệnh nhân thất bại!"); //Thông báo qua dòng labelStatus
        lbStatus.setForeground(Color.red);
    }   
    }//GEN-LAST:event_btnXoaActionPerformed

    // Hàm thoát
    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
     if (JOptionPane.showConfirmDialog(this, "Bạn có muốn thoát ?", "Thông báo",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    dispose();
            }                    
    }//GEN-LAST:event_btnThoatActionPerformed
  
    // Hàm tìm kiếm theo mã bệnh nhân
    private void btnTimKiemTheoMaBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemTheoMaBNActionPerformed
        if (txtMaBN.getText().isEmpty())
       {
           JOptionPane.showMessageDialog(this, "Bạn chưa nhập mã bệnh nhân!");
       }
    else {
        try{
            ClassBenhNhan findbn = bnDAO.findBenhNhanByID(Integer.parseInt(txtMaBN.getText().trim()));
            
            if (findbn != null){
                JOptionPane.showMessageDialog(this, "Đã tìm thấy mã BN: "+txtMaBN.getText());
                lbStatus.setText("Đã tìm thấy mã bệnh nhân: "+txtMaBN.getText());
                lbStatus.setForeground(Color.blue);
                setModel(findbn); // Tìm thấy mã bệnh nhân sẽ đổ dữ liệu lên form
            }
            else {
                 JOptionPane.showMessageDialog(this, "Không tìm thấy mã BN: "+txtMaBN.getText());
                 lbStatus.setText("Không tìm thấy mã bệnh nhân: "+txtMaBN.getText());
                 lbStatus.setForeground(Color.red);
            }
        } catch (Exception ex){
             System.out.println (ex.toString());
        }     
    }                 
    }//GEN-LAST:event_btnTimKiemTheoMaBNActionPerformed

    //Hàm reset lại form
    public void resetForm(){
        txtMaBN.setText("");
        txtHoTenBN.setText("");
        txtNgaySinh.setText("");
        cbbGioiTinh.setSelectedIndex(0);
        txtDiaChi.setText("");
        txtSDT.setText("");
        txtGhiChu.setText("");
        
        txtMaBN.setEnabled(true);
        txtSDT.setEnabled(true);
    }
    //
    private void btnResetFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetFormActionPerformed
        resetForm();
    }//GEN-LAST:event_btnResetFormActionPerformed
    
    // Hàm LoadDataToArrayList
    ArrayList<ClassBenhNhan> arr = new ArrayList<ClassBenhNhan>();
    public void LoadDataToArrayList()
    {
        arr.clear();
        try{
            String user="sa";
            String pass="123456";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=DoAnJavaQLPhongKhamTuNhan";
            Connection con = DriverManager.getConnection(url, user, pass);
            String sql = "select * from Table_BenhNhan";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){ 
                int maBN = rs.getInt("MaBN");
                String hotenBN = rs.getString("HoTenBN");
                Date ngaysinh = rs.getDate("NgaySinh"); 
                String gioitinh = rs.getString("GioiTinh");
                String diachi = rs.getString("DiaChi");
                String sdt = rs.getString("SoDienThoai");
                String ghichu = rs.getString("GhiChu");
               
                ClassBenhNhan benhnhan = new ClassBenhNhan(maBN, hotenBN, ngaysinh, gioitinh, diachi, sdt, ghichu);
                arr.add(benhnhan);
            }
            con.close();
        } 
        catch(Exception ex){
            System.out.println (ex.toString());
        }
    }
    
    // Hàm xuất file excel
    private void btnXuatFileExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatFileExcelActionPerformed
        try{
            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet sheet = workbook.createSheet("DanhSachBenhNhan");
            XSSFRow row = null;
            XSSFCell cell = null;
            row = sheet.createRow(5); // Tạo ra 5 dòng trống đầu tiên trong excel
            cell = row.createCell(0,CellType.STRING);
            cell.setCellValue("STT");
            
            cell = row.createCell(1,CellType.STRING);
            cell.setCellValue("Mã BN");
            
            cell = row.createCell(2,CellType.STRING);
            cell.setCellValue("Họ tên BN");
            
            cell = row.createCell(3,CellType.STRING);
            cell.setCellValue("Ngày sinh");
            
            cell = row.createCell(4,CellType.STRING);
            cell.setCellValue("Giới tính");
           
            cell = row.createCell(5,CellType.STRING);
            cell.setCellValue("Địa chỉ");
            
            cell = row.createCell(6,CellType.STRING);
            cell.setCellValue("SĐT");
            
            cell = row.createCell(7,CellType.STRING);
            cell.setCellValue("Ghi chú");
            
            for (int i = 0; i<arr.size(); i++)
            {
                ClassBenhNhan benhnhan = arr.get(i);
                row = sheet.createRow(6+i);
                
                cell = row.createCell(0,CellType.NUMERIC);
                cell.setCellValue(i+1);
                
                cell = row.createCell(1,CellType.STRING);
                cell.setCellValue(arr.get(i).getMaBN());
                
                cell = row.createCell(2,CellType.STRING);
                cell.setCellValue(arr.get(i).getHoTenBN());
                
                cell = row.createCell(3,CellType.STRING);
                cell.setCellValue(arr.get(i).getNgaySinh());
                
                cell = row.createCell(4,CellType.STRING);
                cell.setCellValue(arr.get(i).getGioiTinh());
                
                cell = row.createCell(5,CellType.STRING);
                cell.setCellValue(arr.get(i).getDiaChi());
                
                cell = row.createCell(6,CellType.STRING);
                cell.setCellValue(arr.get(i).getSoDienThoai());
                
                cell = row.createCell(7,CellType.STRING);
                cell.setCellValue(arr.get(i).getGhiChu());
    
            }
            
            File f = new File ("C://Users//Huynh Cuong//Desktop//DanhSachBenhNhan.xlsx");
            try{
                FileOutputStream fis = new FileOutputStream(f);
                workbook.write(fis);
                fis.close();
            } catch (FileNotFoundException ex){
                System.out.println (ex.toString());
            }
            catch (IOException ex){
                System.out.println (ex.toString());
            }
            
            JOptionPane.showMessageDialog(this, "Xuất file excel thành công!");
            lbStatus.setText("Xuất file excel thành công!");
            lbStatus.setForeground(Color.blue);
            
        } catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Xuất file excel thất bại!");
            lbStatus.setText("Xuất file excel thất bại!");
            lbStatus.setForeground(Color.red);
            System.out.println (ex.toString());
        }
    }//GEN-LAST:event_btnXuatFileExcelActionPerformed
 
    private void txtSDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSDTActionPerformed
        
    }//GEN-LAST:event_txtSDTActionPerformed

    //
    private void txtSDTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSDTKeyPressed
   
     /*   if(txtSDT.getText().length() <= 9){
      
           txtSDT.setEnabled(true);
        } 
        else{
       JOptionPane.showMessageDialog(this, "Vui lòng nhập đủ 10 số điện thoại");
        } */
    }//GEN-LAST:event_txtSDTKeyPressed

    // Sử dụng event Mouse Click, khi click vào TbDSBenhNhan sẽ đổ dữ liệu lên form
    private void TbDSBenhNhanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TbDSBenhNhanMouseClicked
        //   if (evt.getClickCount()==2) // Double click
        //  {
            txtMaBN.setEnabled(false); // Mục Mã bệnh nhân bị ẩn để không được sửa khoá chính
            int position = TbDSBenhNhan.rowAtPoint(evt.getPoint()); //Vị trí đang chọn
            idBenhNhan = Integer.parseInt(TbDSBenhNhan.getValueAt(position, 0).toString());
            ClassBenhNhan benhnhan = bnDAO.findBenhNhanByID(idBenhNhan);
            if (benhnhan !=null){
                setModel(benhnhan);
            }
            else{

            }
            //      }
    }//GEN-LAST:event_TbDSBenhNhanMouseClicked

    private void txtGhiChuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGhiChuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGhiChuActionPerformed

    private void txtGhiChuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGhiChuKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGhiChuKeyPressed
    
    //
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmBenhNhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmBenhNhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmBenhNhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmBenhNhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
   
     


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmBenhNhan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TbDSBenhNhan;
    private javax.swing.JButton btnResetForm;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnTimKiemTheoMaBN;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXuatFileExcel;
    private javax.swing.JComboBox<String> cbbGioiTinh;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbDSBenhNhan;
    private javax.swing.JLabel lbDiaChi;
    private javax.swing.JLabel lbGhiChu;
    private javax.swing.JLabel lbGioiTinh;
    private javax.swing.JLabel lbHoTenBN;
    private javax.swing.JLabel lbMaBN;
    private javax.swing.JLabel lbNgaySinh;
    private javax.swing.JLabel lbSDT;
    private javax.swing.JLabel lbStatus;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtGhiChu;
    private javax.swing.JTextField txtHoTenBN;
    private javax.swing.JTextField txtMaBN;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtSDT;
    // End of variables declaration//GEN-END:variables
}
