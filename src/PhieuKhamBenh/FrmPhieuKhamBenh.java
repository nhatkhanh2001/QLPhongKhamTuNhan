/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PhieuKhamBenh;

import BacSi.BacSiDAO;
import BenhNhan.BenhNhanDAO;
import PhongKham.ClassPhongKham;
import PhongKham.PhongKhamDAO;
import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


/**
 *
 * @author Huỳnh Cường
 */

public class FrmPhieuKhamBenh extends javax.swing.JFrame {
    BenhNhanDAO bnDAO = new BenhNhanDAO(); // Khai báo để sử dụng đổ dữ liệu lên combobox, con sẽ lấy thông tin từ cha
    PhongKhamDAO pkDAO = new PhongKhamDAO();   
    BacSiDAO bsDAO = new BacSiDAO();
    PhieuKhamBenhDAO pkbDAO = new PhieuKhamBenhDAO();
    
    SimpleDateFormat date_format = new SimpleDateFormat("dd/MM/yyyy"); // Dùng để sửa thứ tự dd/MM/yyyy
    
    int idPhieuKhamBenh = -1; 
   
    public FrmPhieuKhamBenh() {
        initComponents();
        setLocationRelativeTo(null); // Đưa form ra giữa màn hình khi run 
        
        getCbbPhongKham();
     // getCbbBenhNhan();        
     // getCbbBacSi();
        
        fillDataTable();
        LoadDataToArrayList();     
    }

    // Hàm load dữ liệu lên combobox
    public void getCbbPhongKham(){
        DefaultComboBoxModel cbbModel02 = (DefaultComboBoxModel) cbbMaPK.getModel();
        for (ClassPhongKham pk : pkDAO.getAllPhongKham()) {
            cbbModel02.addElement(pk);
        }
    }
    
    /*
    public void getCbbBenhNhan(){
        DefaultComboBoxModel cbbModel01 = (DefaultComboBoxModel) cbbMaBN.getModel();
        for (ClassBenhNhan bn : bnDAO.getAllBenhNhan()) {
            cbbModel01.addElement(bn);
        }
    }
    
     public void getCbbBacSi(){
        DefaultComboBoxModel cbbModel03 = (DefaultComboBoxModel) cbbMaBS.getModel();
        for (ClassBacSi bs : bsDAO.getAllBacSi()) {
            cbbModel03.addElement(bs);
        }
    }*/
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbDanhSachPhieuKhamBenh = new javax.swing.JLabel();
        lbMaPhieu = new javax.swing.JLabel();
        lbTinhTrangBN = new javax.swing.JLabel();
        lbDiUngThuoc = new javax.swing.JLabel();
        lbKhamLamSang = new javax.swing.JLabel();
        lbBenhKemTheo = new javax.swing.JLabel();
        lbNhipTim = new javax.swing.JLabel();
        lbNhipTho = new javax.swing.JLabel();
        lbHuyetAp = new javax.swing.JLabel();
        lbNhietDo = new javax.swing.JLabel();
        lbCanNang = new javax.swing.JLabel();
        lbChieuCao = new javax.swing.JLabel();
        lbChanDoan = new javax.swing.JLabel();
        lbTienKham = new javax.swing.JLabel();
        lbNgayKham = new javax.swing.JLabel();
        lbMaPK = new javax.swing.JLabel();
        lbMaBN = new javax.swing.JLabel();
        lbMaBS = new javax.swing.JLabel();
        lbvnd = new javax.swing.JLabel();
        lbkg = new javax.swing.JLabel();
        lbStatus = new javax.swing.JLabel();
        lbcm = new javax.swing.JLabel();
        txtMaPhieu = new javax.swing.JTextField();
        txtTinhTrangBN = new javax.swing.JTextField();
        txtDiUngThuoc = new javax.swing.JTextField();
        txtKhamLamSang = new javax.swing.JTextField();
        txtBenhKemTheo = new javax.swing.JTextField();
        txtNhipTim = new javax.swing.JTextField();
        txtNhipTho = new javax.swing.JTextField();
        txtHuyetAp = new javax.swing.JTextField();
        txtNhietDo = new javax.swing.JTextField();
        txtCanNang = new javax.swing.JTextField();
        txtChieuCao = new javax.swing.JTextField();
        txtChanDoan = new javax.swing.JTextField();
        txtTienKham = new javax.swing.JTextField();
        txtNgayKham = new javax.swing.JTextField();
        cbbMaPK = new javax.swing.JComboBox<>();
        txtMaBN = new javax.swing.JTextField();
        txtMaBS = new javax.swing.JTextField();
        btnTimKiemTheoMaPhieu = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        btnXuatFileExcel = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TbDSPhieuKhamBenh = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DANH SÁCH PHIẾU KHÁM BỆNH");

        lbDanhSachPhieuKhamBenh.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lbDanhSachPhieuKhamBenh.setForeground(new java.awt.Color(255, 0, 0));
        lbDanhSachPhieuKhamBenh.setText("DANH SÁCH PHIẾU KHÁM BỆNH");

        lbMaPhieu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbMaPhieu.setText("Mã phiếu:");

        lbTinhTrangBN.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbTinhTrangBN.setText("Tình trạng BN:");

        lbDiUngThuoc.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbDiUngThuoc.setText("Dị ứng thuốc:");

        lbKhamLamSang.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbKhamLamSang.setText("Khám lâm sàng:");

        lbBenhKemTheo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbBenhKemTheo.setText("Bệnh kèm theo: ");

        lbNhipTim.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbNhipTim.setText("Nhịp tim:");

        lbNhipTho.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbNhipTho.setText("Nhịp thở:");

        lbHuyetAp.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbHuyetAp.setText("Huyết áp:");

        lbNhietDo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbNhietDo.setText("Nhiệt độ:");

        lbCanNang.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbCanNang.setText("Cân nặng:");

        lbChieuCao.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbChieuCao.setText("Chiều cao:");

        lbChanDoan.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbChanDoan.setText("Chẩn đoán:");

        lbTienKham.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbTienKham.setText("Tiền khám:");

        lbNgayKham.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbNgayKham.setText("Ngày khám:");

        lbMaPK.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbMaPK.setText("Mã PK:");

        lbMaBN.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbMaBN.setText("Mã BN:");

        lbMaBS.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbMaBS.setText("Mã BS:");

        lbvnd.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbvnd.setText("vnđ");

        lbkg.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbkg.setText("kg");

        lbStatus.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lbStatus.setText("Status:");

        lbcm.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbcm.setText("cm");

        txtMaPhieu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtTinhTrangBN.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtDiUngThuoc.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtKhamLamSang.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtBenhKemTheo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtNhipTim.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtNhipTho.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtHuyetAp.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtNhietDo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtCanNang.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtChieuCao.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtChanDoan.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtChanDoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChanDoanActionPerformed(evt);
            }
        });

        txtTienKham.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtNgayKham.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        cbbMaPK.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbbMaPK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbMaPKActionPerformed(evt);
            }
        });

        txtMaBN.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtMaBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaBNActionPerformed(evt);
            }
        });

        txtMaBS.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        btnTimKiemTheoMaPhieu.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnTimKiemTheoMaPhieu.setText("Tìm kiếm theo mã phiếu");
        btnTimKiemTheoMaPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemTheoMaPhieuActionPerformed(evt);
            }
        });

        btnLamMoi.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        btnXuatFileExcel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnXuatFileExcel.setText("Xuất file excel");
        btnXuatFileExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatFileExcelActionPerformed(evt);
            }
        });

        btnThem.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnXoa.setText("Xoá");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnThoat.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        TbDSPhieuKhamBenh.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        TbDSPhieuKhamBenh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã phiếu", "Tình trạng BN", "Dị ứng thuốc", "Khám lâm sàng", "Bệnh kèm theo", "Nhịp tim", "Nhịp thở", "Huyết áp", "Nhiệt độ", "Cân nặng", "Chiều cao", "Chẩn đoán", "Tiền khám", "Ngày khám", "Mã PK", "Tên PK", "Mã BN", "Họ tên BN", "Ngày sinh", "Giới tính", "Địa chỉ", "SĐT", "Ghi chú", "Mã BS", "Họ tên BS", "Ngày sinh", "Giới tính", "Địa chỉ ", "SĐT"
            }
        ));
        TbDSPhieuKhamBenh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TbDSPhieuKhamBenhMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TbDSPhieuKhamBenh);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(688, 688, 688)
                        .addComponent(lbDanhSachPhieuKhamBenh)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lbTinhTrangBN, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                        .addComponent(lbDiUngThuoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbKhamLamSang, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lbMaPhieu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbBenhKemTheo, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbStatus)
                        .addGap(0, 1503, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnTimKiemTheoMaPhieu)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(txtTinhTrangBN, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txtMaPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGap(50, 50, 50)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(lbNhipTho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(lbNhipTim, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGap(20, 20, 20)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(txtNhipTim, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txtNhipTho, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(txtDiUngThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txtKhamLamSang, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGap(50, 50, 50)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                    .addComponent(lbHuyetAp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                    .addComponent(lbNhietDo, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(20, 20, 20)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(txtNhietDo, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(txtHuyetAp, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                                .addGap(50, 50, 50)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(lbChieuCao, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                                                    .addComponent(lbCanNang, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                                                    .addComponent(lbChanDoan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                        .addGap(20, 20, 20)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(txtCanNang, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtChieuCao, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtChanDoan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(lbkg, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(50, 50, 50)
                                                        .addComponent(lbTienKham, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(lbcm, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(lbNgayKham, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(20, 20, 20)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtTienKham, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtNgayKham, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnLamMoi))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(719, 719, 719)
                                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbvnd, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbMaBS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbMaBN, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                                    .addComponent(lbMaPK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMaBN, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbbMaPK, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMaBS, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnXuatFileExcel)))
                            .addComponent(txtBenhKemTheo, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbDanhSachPhieuKhamBenh)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbNhipTho)
                                .addComponent(txtNhipTho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtNgayKham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbNgayKham)
                                        .addComponent(lbcm))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lbTienKham)
                                            .addComponent(txtTienKham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lbvnd))
                                        .addGap(28, 28, 28)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtMaPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbNhipTim)
                                        .addComponent(txtNhipTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbCanNang)
                                        .addComponent(txtCanNang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbMaPhieu)
                                        .addComponent(lbkg))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtTinhTrangBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lbTinhTrangBN))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lbChieuCao)
                                            .addComponent(txtChieuCao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtDiUngThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbDiUngThuoc))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtHuyetAp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbHuyetAp))
                                    .addComponent(lbChanDoan))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNhietDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtKhamLamSang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbKhamLamSang)
                                        .addComponent(lbNhietDo))))
                            .addComponent(txtChanDoan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbbMaPK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbMaPK))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbMaBN))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaBS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbMaBS))))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBenhKemTheo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbBenhKemTheo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnXoa)
                    .addComponent(btnXuatFileExcel)
                    .addComponent(btnTimKiemTheoMaPhieu)
                    .addComponent(btnLamMoi)
                    .addComponent(btnThoat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtChanDoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChanDoanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChanDoanActionPerformed

    // Hàm xoá
    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
       if (pkbDAO.delete(idPhieuKhamBenh)>0){
        JOptionPane.showMessageDialog(this, "Xoá thông tin phiếu khám bệnh thành công!");
        lbStatus.setText("Xoá thông tin phiếu khám bệnh thành công!"); //Thông báo qua dòng labelStatus
        lbStatus.setForeground(Color.blue);
        fillDataTable();
        LoadDataToArrayList(); 
    }
    else{
        JOptionPane.showMessageDialog(this, "Xoá thông tin phiếu khám bệnh thất bại!");
        lbStatus.setText("Xoá thông tin phiếu khám bệnh thất bại!"); //Thông báo qua dòng labelStatus
        lbStatus.setForeground(Color.red);
    }   
        
    }//GEN-LAST:event_btnXoaActionPerformed

     // Hàm LoadDataToArrayList
    ArrayList<ClassPhieuKhamBenh02> arr = new ArrayList<ClassPhieuKhamBenh02>();
    public void LoadDataToArrayList()
    {
        arr.clear();
        try{
            String user="sa";
            String pass="123456";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=DoAnJavaQLPhongKhamTuNhan";
            Connection con = DriverManager.getConnection(url, user, pass);
            String sql = "select * from Table_PhieuKhamBenh";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){ 
                int maPhieu = rs.getInt("MaPhieu");
                String tinhtrangbn = rs.getString("TinhTrangBN");
                String diungthuoc = rs.getString("DiUngThuoc");
                String khamlamsang = rs.getString("KhamLamSang");
                String benhkemtheo = rs.getString("BenhKemTheo");
                String nhiptim = rs.getString("NhipTim");
                String nhiptho = rs.getString("NhipTho");
                String huyetap = rs.getString("HuyetAp");
                String nhietdo = rs.getString("NhietDo");
                String cannang = rs.getString("CanNang");
                String chieucao = rs.getString("ChieuCao");
                String chandoan = rs.getString("ChanDoan");
                double tienkham = rs.getDouble("TienKham");
                Date ngaykham = rs.getDate("NgayKham"); 
                int mapk = rs.getInt("MaPK");
                
                int mabn = rs.getInt("MaBN");
                int mabs = rs.getInt("MaBS");
               
                ClassPhieuKhamBenh02 phieukhambenh02 = new ClassPhieuKhamBenh02(maPhieu, tinhtrangbn, diungthuoc, khamlamsang, benhkemtheo, nhiptim, nhiptho, huyetap, nhietdo, cannang, chieucao, chandoan, tienkham, ngaykham, mapk, mabn, mabs);
                arr.add(phieukhambenh02);
            }
            con.close();
        } 
        catch(Exception ex){
            System.out.println (ex.toString());
        }
    }
    
    // Hàm xuất file excel
    private void btnXuatFileExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatFileExcelActionPerformed
        try{
            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet sheet = workbook.createSheet("DanhSachPhieuKhamBenh");
            XSSFRow row = null;
            XSSFCell cell = null;
            row = sheet.createRow(5); // Tạo ra 5 dòng trống đầu tiên trong excel
            cell = row.createCell(0,CellType.STRING);
            cell.setCellValue("STT");
            
            cell = row.createCell(1,CellType.STRING);
            cell.setCellValue("Mã phiếu");
            
            cell = row.createCell(2,CellType.STRING);
            cell.setCellValue("Tình trạng BN");
            
            cell = row.createCell(3,CellType.STRING);
            cell.setCellValue("Di ứng thuốc");
            
            cell = row.createCell(4,CellType.STRING);
            cell.setCellValue("Khám lâm sàng");
           
            cell = row.createCell(5,CellType.STRING);
            cell.setCellValue("Bện kèm theo");
            
            cell = row.createCell(6,CellType.STRING);
            cell.setCellValue("Nhịp tim");
            
            cell = row.createCell(7,CellType.STRING);
            cell.setCellValue("Nhip tho");
            
            cell = row.createCell(8,CellType.STRING);
            cell.setCellValue("Huyết áp");
                   
            cell = row.createCell(9,CellType.STRING);
            cell.setCellValue("Nhiệt độ");
            
            cell = row.createCell(10,CellType.STRING);
            cell.setCellValue("Cân nặng");
            
            cell = row.createCell(11,CellType.STRING);
            cell.setCellValue("Chiều cao");
            
            cell = row.createCell(12,CellType.STRING);
            cell.setCellValue("Chẩn đoán");
            
            cell = row.createCell(13,CellType.STRING);
            cell.setCellValue("Tiền khám");
            
            cell = row.createCell(14,CellType.STRING);
            cell.setCellValue("Ngày khám");
            
            cell = row.createCell(15,CellType.STRING);
            cell.setCellValue("Mã PK");
            
            cell = row.createCell(16,CellType.STRING);
            cell.setCellValue("Mã BN");
            
            cell = row.createCell(17,CellType.STRING);
            cell.setCellValue("Mã BS");
            
            
            for (int i = 0; i<arr.size(); i++)
            {
                ClassPhieuKhamBenh02 phieukhambenh02 = arr.get(i);
                row = sheet.createRow(6+i);
                
                cell = row.createCell(0,CellType.NUMERIC);
                cell.setCellValue(i+1);
                
                cell = row.createCell(1,CellType.STRING);
                cell.setCellValue(arr.get(i).getMaPhieu());
                
                cell = row.createCell(2,CellType.STRING);
                cell.setCellValue(arr.get(i).getTinhTrangBN());
                
                cell = row.createCell(3,CellType.STRING);
                cell.setCellValue(arr.get(i).getDiUngThuoc());
                
                cell = row.createCell(4,CellType.STRING);
                cell.setCellValue(arr.get(i).getKhamLamSang());
                
                cell = row.createCell(5,CellType.STRING);
                cell.setCellValue(arr.get(i).getBenhKemTheo());
                
                cell = row.createCell(6,CellType.STRING);
                cell.setCellValue(arr.get(i).getNhipTim());
                
                cell = row.createCell(7,CellType.STRING);
                cell.setCellValue(arr.get(i).getNhipTho());   
                
                cell = row.createCell(8,CellType.STRING);
                cell.setCellValue(arr.get(i).getHuyetAp());
                
                cell = row.createCell(9,CellType.STRING);
                cell.setCellValue(arr.get(i).getNhietDo());
                
                cell = row.createCell(10,CellType.STRING);
                cell.setCellValue(arr.get(i).getCanNang());
                
                cell = row.createCell(11,CellType.STRING);
                cell.setCellValue(arr.get(i).getChieuCao());
                
                cell = row.createCell(12,CellType.STRING);
                cell.setCellValue(arr.get(i).getChanDoan());
                
                cell = row.createCell(13,CellType.STRING);
                cell.setCellValue(arr.get(i).getTienKham());
                
                cell = row.createCell(14,CellType.STRING);
                cell.setCellValue(arr.get(i).getNgayKham()); 
                
                cell = row.createCell(15,CellType.NUMERIC);
                cell.setCellValue(arr.get(i).getMaPK()); 
                
                cell = row.createCell(16,CellType.NUMERIC);
                cell.setCellValue(arr.get(i).getMaBN()); 
                
                cell = row.createCell(17,CellType.NUMERIC);
                cell.setCellValue(arr.get(i).getMaBS()); 
      
            }
            
            File f = new File ("C://Users//Huynh Cuong//Desktop//DanhSachPhieuKhamBenh.xlsx");
            try{
                FileOutputStream fis = new FileOutputStream(f);
                workbook.write(fis);
                fis.close();
            } catch (FileNotFoundException ex){
                System.out.println (ex.toString());
            }
            catch (IOException ex){
                System.out.println (ex.toString());
            }
            
            JOptionPane.showMessageDialog(this, "Xuất file excel thành công!");
            lbStatus.setText("Xuất file excel thành công!");
            lbStatus.setForeground(Color.blue);
            
        } catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Xuất file excel thất bại!");
            lbStatus.setText("Xuất file excel thất bại!");
            lbStatus.setForeground(Color.red);
            System.out.println (ex.toString());
        }
    }//GEN-LAST:event_btnXuatFileExcelActionPerformed

    // Hàm sửa
    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
    if (!checkValidateForm())
        {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập đầy đủ thông tin!"); //Thanh thông báo hiện lên
            lbStatus.setText("Bạn chưa nhập đầy đủ thông tin!"); //Thông báo qua dòng labelStatus
            lbStatus.setForeground(Color.red); // Màu chữ thông báo qua dòng labelStatus
        }
        else{
        try{
            ClassPhieuKhamBenh03 pkb = getModel();
            if (pkbDAO.update(pkb)>0){
                JOptionPane.showMessageDialog(this, "Sửa thông tin phiếu khám bệnh thành công!");
                lbStatus.setText("Sửa thông tin phiếu khám bệnh thành công!");
                lbStatus.setForeground(Color.blue);
                fillDataTable();
                LoadDataToArrayList(); 
            } else {
                JOptionPane.showMessageDialog(this, "Sửa thông tin phiếu khám bệnh thất bại!");
                lbStatus.setText("Sửa thông tin phiếu khám bệnh thất bại!");
                lbStatus.setForeground(Color.red);
            }        
        } catch (Exception ex){
            System.out.println (ex.toString());
        }     
      }  
    }//GEN-LAST:event_btnSuaActionPerformed

    //Hàm reset lại form
    public void resetForm(){
        txtMaPhieu.setText("");
        txtTinhTrangBN.setText("");
        txtDiUngThuoc.setText("");
        txtKhamLamSang.setText("");
        txtBenhKemTheo.setText("");
        txtNhipTim.setText("");
        txtNhipTho.setText("");
        txtHuyetAp.setText("");
        txtNhietDo.setText("");
        txtCanNang.setText("");
        txtChieuCao.setText("");
        txtChanDoan.setText("");
        txtTienKham.setText("");
        txtNgayKham.setText("");
        txtMaBN.setText("");
        txtMaBS.setText("");
     // cbbMaBN.setSelectedIndex(0);
     // cbbMaPK.setSelectedIndex(0);
     // cbbMaBS.setSelectedIndex(0);
        txtMaPhieu.setEnabled(true);
    }
    //
    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        resetForm();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    // Hàm thêm
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (!checkValidateForm())
        {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập đầy đủ thông tin!"); //Thanh thông báo hiện lên
            lbStatus.setText("Bạn chưa nhập đầy đủ thông tin!"); //Thông báo qua dòng labelStatus
            lbStatus.setForeground(Color.red); // Màu chữ thông báo qua dòng labelStatus
        }
        else{
            try {
                ClassPhieuKhamBenh03 pkb = getModel();
                //  System.out.println("=>"+bs.toString());
                if (pkbDAO.add(pkb)>0) {
                    JOptionPane.showMessageDialog(this, "Thêm phiếu khám mới thành công!"); //Thanh thông báo hiện lên
                    lbStatus.setText("Thêm phiếu khám mới thành công!"); //Thông báo qua dòng labelStatus
                    lbStatus.setForeground(Color.blue);
                    fillDataTable();
                    LoadDataToArrayList(); 
                }
                else{
                    JOptionPane.showMessageDialog(this, "Thêm phiếu khám mới thất bại!");
                    lbStatus.setText("Thêm phiếu khám mới thất bại!");
                    lbStatus.setForeground(Color.red);
                }
            } catch (ParseException ex) {
                System.out.println("Error:"+ex.toString());
            }
        }
    }//GEN-LAST:event_btnThemActionPerformed

    // Hàm tìm kiếm theo mã phiếu
    private void btnTimKiemTheoMaPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemTheoMaPhieuActionPerformed
         if (txtMaPhieu.getText().isEmpty())
       {
           JOptionPane.showMessageDialog(this, "Bạn chưa nhập mã phiếu!");
       }
    else {
        try{
            ClassPhieuKhamBenh03 findpkb = pkbDAO.findPhieuKhamBenhByID(Integer.parseInt(txtMaPhieu.getText().trim()));
            
            if (findpkb != null){
                JOptionPane.showMessageDialog(this, "Đã tìm thấy mã phiếu: "+txtMaPhieu.getText());
                lbStatus.setText("Đã tìm thấy mã phiếu: "+txtMaPhieu.getText());
                lbStatus.setForeground(Color.blue);
                setModel(findpkb); // Tìm thấy mã bác sĩ sẽ đổ dữ liệu lên form
            }
            else {
                 JOptionPane.showMessageDialog(this, "Không tìm thấy mã phiếu: "+txtMaPhieu.getText());
                 lbStatus.setText("Không tìm thấy mã phiếu: "+txtMaPhieu.getText());
                 lbStatus.setForeground(Color.red);
            }
        } catch (Exception ex){
             System.out.println (ex.toString());
        }     
    }
    }//GEN-LAST:event_btnTimKiemTheoMaPhieuActionPerformed

    // Hàm thoát
    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        if (JOptionPane.showConfirmDialog(this, "Bạn có muốn thoát ?", "Thông báo",
            JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
        dispose();
        }
    }//GEN-LAST:event_btnThoatActionPerformed

    // Sử dụng event Mouse Click, khi click vào TbDSPhieuKhamBenh sẽ đổ dữ liệu lên form
    private void TbDSPhieuKhamBenhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TbDSPhieuKhamBenhMouseClicked
        //   if (evt.getClickCount()==2) // Double click
        //  {
            txtMaPhieu.setEnabled(false); // Mục Mã phòng khám bị ẩn để không được sửa khoá chính
            int position = TbDSPhieuKhamBenh.rowAtPoint(evt.getPoint()); //Vị trí đang chọn
            idPhieuKhamBenh = Integer.parseInt(TbDSPhieuKhamBenh.getValueAt(position, 0).toString());
            ClassPhieuKhamBenh03 phieukhambenh = pkbDAO.findPhieuKhamBenhByID(idPhieuKhamBenh);
            if (phieukhambenh !=null){
                setModel(phieukhambenh);
            }
            else{

            }
            //      }
    }//GEN-LAST:event_TbDSPhieuKhamBenhMouseClicked

    private void cbbMaPKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbMaPKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbMaPKActionPerformed

    private void txtMaBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaBNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaBNActionPerformed

    //Hàm lấy dữ liệu từ SQL đưa vào bảng TbDSPhieuKhamBenh
    public void fillDataTable(){ 
        DefaultTableModel tbModel = (DefaultTableModel) TbDSPhieuKhamBenh.getModel();
        tbModel.setRowCount(0);
        for (ClassPhieuKhamBenh03 phieukhambenh : pkbDAO.getAllPhieuKhamBenh()) {
            Object dataRow [] = new Object[29];
            dataRow[0] = phieukhambenh.getMaPhieu();
            dataRow[1] = phieukhambenh.getTinhTrangBN();
            dataRow[2] = phieukhambenh.getDiUngThuoc();
            dataRow[3] = phieukhambenh.getKhamLamSang();
            dataRow[4] = phieukhambenh.getBenhKemTheo();
            dataRow[5] = phieukhambenh.getNhipTim();
            dataRow[6] = phieukhambenh.getNhipTho();
            dataRow[7] = phieukhambenh.getHuyetAp();
            dataRow[8] = phieukhambenh.getNhietDo();
            dataRow[9] = phieukhambenh.getCanNang();
            dataRow[10] = phieukhambenh.getChieuCao();
            dataRow[11] = phieukhambenh.getChanDoan();
            dataRow[12] = phieukhambenh.getTienKham();
            dataRow[13] = date_format.format(phieukhambenh.getNgayKham());  // Chuyển thành dd/MM/yyyy
 
            dataRow[14] = phieukhambenh.getPk().getMaPK();
            dataRow[15] = phieukhambenh.getPk().getTenPK();
      
       //   dataRow[15] = phieukhambenh.getMaBN();
       //   dataRow[16] = phieukhambenh.getMaBS();
                         
            dataRow[16] = phieukhambenh.getBn().getMaBN();
            dataRow[17] = phieukhambenh.getBn().getHoTenBN();
            dataRow[18] = date_format.format(phieukhambenh.getBn().getNgaySinh()); // Chuyển thành dd/MM/yyyy
            dataRow[19] = phieukhambenh.getBn().getGioiTinh();
            dataRow[20] = phieukhambenh.getBn().getDiaChi();
            dataRow[21] = phieukhambenh.getBn().getSoDienThoai();
            dataRow[22] = phieukhambenh.getBn().getGhiChu();
              
            dataRow[23] = phieukhambenh.getBs().getMaBS();
            dataRow[24] = phieukhambenh.getBs().getHoTenBS();
            dataRow[25] = date_format.format(phieukhambenh.getBs().getNgaySinh()); // Chuyển thành dd/MM/yyyy
            dataRow[26] = phieukhambenh.getBs().getGioiTinh();
            dataRow[27] = phieukhambenh.getBs().getDiaChi();
            dataRow[28] = phieukhambenh.getBs().getSoDienThoai();
                       
            tbModel.addRow(dataRow);
        }
    }
    
    // Lấy dữ liệu đã nhập get vào TbDSPhieuKhamBenh
    public ClassPhieuKhamBenh03 getModel() throws ParseException{
        ClassPhieuKhamBenh03 pkb = new ClassPhieuKhamBenh03();
        pkb.setMaPhieu(Integer.parseInt(txtMaPhieu.getText()));
        pkb.setTinhTrangBN(txtTinhTrangBN.getText());
        pkb.setDiUngThuoc(txtDiUngThuoc.getText());
        pkb.setKhamLamSang(txtKhamLamSang.getText());
        pkb.setBenhKemTheo(txtBenhKemTheo.getText());
        pkb.setNhipTim(txtNhipTim.getText());
        pkb.setNhipTho(txtNhipTho.getText());
        pkb.setHuyetAp(txtHuyetAp.getText());
        pkb.setNhietDo(txtNhietDo.getText());
        pkb.setCanNang(txtCanNang.getText());
        pkb.setChieuCao(txtChieuCao.getText());
        pkb.setChanDoan(txtChanDoan.getText());
        pkb.setTienKham(Double.parseDouble(txtTienKham.getText()));
        pkb.setNgayKham(date_format.parse(txtNgayKham.getText()));
      
        ClassPhongKham pk = pkDAO.findPhongKhamByName(cbbMaPK.getSelectedItem().toString());
        pkb.setPk(pk);
        
        pkb.setMaBN(Integer.parseInt(txtMaBN.getText()));
        pkb.setMaBS(Integer.parseInt(txtMaBS.getText()));
        
        
     // ClassBenhNhan bn = bnDAO.findBenhNhanByName(cbbMaBN.getSelectedItem().toString());
     // pkb.setBn(bn);
     // ClassBacSi bs = bsDAO.findBacSiByName(cbbMaBS.getSelectedItem().toString());
     // pkb.setBs(bs); 
            
        return pkb;
    }
    
    // Đổ dữ liệu lên form, dùng cho envent Mouse Click và tìm kiếm 
    public void setModel (ClassPhieuKhamBenh03 pkb){
        txtMaPhieu.setText(String.valueOf(pkb.getMaPhieu())); 
        txtTinhTrangBN.setText(pkb.getTinhTrangBN());
        txtDiUngThuoc.setText(pkb.getDiUngThuoc());
        txtKhamLamSang.setText(pkb.getKhamLamSang());
        txtBenhKemTheo.setText(pkb.getBenhKemTheo());
        txtNhipTim.setText(pkb.getNhipTim());
        txtNhipTho.setText(pkb.getNhipTho());
        txtHuyetAp.setText(pkb.getHuyetAp());
        txtNhietDo.setText(pkb.getNhietDo());
        txtCanNang.setText(pkb.getCanNang());
        txtChieuCao.setText(pkb.getChieuCao());
        txtChanDoan.setText(pkb.getChanDoan());
        txtTienKham.setText(pkb.getTienKham()+"");
        txtNgayKham.setText(date_format.format(pkb.getNgayKham()));
      
        // Đổ dữ liệu lên combobox Phòng Khám, cbbMaPK 
        for (ClassPhongKham pk : pkDAO.getAllPhongKham()){
            if (pk.getMaPK()==pkb.getPk().getMaPK()){
                for (int i=0; i < cbbMaPK.getItemCount(); i++){
                    if (pk.getTenPK().equals(String.valueOf(cbbMaPK.getItemAt(i)))){
                        cbbMaPK.setSelectedIndex(i);
                    }
                }
            }
        }
        
        txtMaBN.setText(String.valueOf(pkb.getMaBN())); 
        txtMaBS.setText(String.valueOf(pkb.getMaBS()));  
    }
    
    // Hàm bool kiểm tra đúng, sai. Nhập đầy đủ thông tin mới cho thêm phiếu khám bệnh mới
    public boolean checkValidateForm(){
        if (txtMaPhieu.getText().isEmpty()||
            txtTinhTrangBN.getText().isEmpty()||
            txtDiUngThuoc.getText().isEmpty()||
            txtKhamLamSang.getText().isEmpty()||
            txtBenhKemTheo.getText().isEmpty()||
            txtNhipTim.getText().isEmpty()||
            txtNhipTho.getText().isEmpty()||
            txtHuyetAp.getText().isEmpty()||
            txtNhietDo.getText().isEmpty()||
            txtCanNang.getText().isEmpty()||
            txtChieuCao.getText().isEmpty()||
            txtChanDoan.getText().isEmpty()||
            txtTienKham.getText().isEmpty()||
            txtNgayKham.getText().isEmpty()||
            cbbMaPK.getSelectedItem().toString().isEmpty()||
            txtMaBN.getText().isEmpty()||
            txtMaBS.getText().isEmpty())               
        {
           // JOptionPane.showMessageDialog(this, "Bạn chưa nhập đủ thông tin!");
            return false;
        }
        else  
        {
            return true;           
        }     
    } 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPhieuKhamBenh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPhieuKhamBenh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPhieuKhamBenh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPhieuKhamBenh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPhieuKhamBenh().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TbDSPhieuKhamBenh;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnTimKiemTheoMaPhieu;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXuatFileExcel;
    private javax.swing.JComboBox<String> cbbMaPK;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbBenhKemTheo;
    private javax.swing.JLabel lbCanNang;
    private javax.swing.JLabel lbChanDoan;
    private javax.swing.JLabel lbChieuCao;
    private javax.swing.JLabel lbDanhSachPhieuKhamBenh;
    private javax.swing.JLabel lbDiUngThuoc;
    private javax.swing.JLabel lbHuyetAp;
    private javax.swing.JLabel lbKhamLamSang;
    private javax.swing.JLabel lbMaBN;
    private javax.swing.JLabel lbMaBS;
    private javax.swing.JLabel lbMaPK;
    private javax.swing.JLabel lbMaPhieu;
    private javax.swing.JLabel lbNgayKham;
    private javax.swing.JLabel lbNhietDo;
    private javax.swing.JLabel lbNhipTho;
    private javax.swing.JLabel lbNhipTim;
    private javax.swing.JLabel lbStatus;
    private javax.swing.JLabel lbTienKham;
    private javax.swing.JLabel lbTinhTrangBN;
    private javax.swing.JLabel lbcm;
    private javax.swing.JLabel lbkg;
    private javax.swing.JLabel lbvnd;
    private javax.swing.JTextField txtBenhKemTheo;
    private javax.swing.JTextField txtCanNang;
    private javax.swing.JTextField txtChanDoan;
    private javax.swing.JTextField txtChieuCao;
    private javax.swing.JTextField txtDiUngThuoc;
    private javax.swing.JTextField txtHuyetAp;
    private javax.swing.JTextField txtKhamLamSang;
    private javax.swing.JTextField txtMaBN;
    private javax.swing.JTextField txtMaBS;
    private javax.swing.JTextField txtMaPhieu;
    private javax.swing.JTextField txtNgayKham;
    private javax.swing.JTextField txtNhietDo;
    private javax.swing.JTextField txtNhipTho;
    private javax.swing.JTextField txtNhipTim;
    private javax.swing.JTextField txtTienKham;
    private javax.swing.JTextField txtTinhTrangBN;
    // End of variables declaration//GEN-END:variables
}
