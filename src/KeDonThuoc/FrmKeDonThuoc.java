/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package KeDonThuoc;

import LoaiThuoc.ClassLoaiThuoc;
import LoaiThuoc.LoaiThuocDAO;
import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


/**
 *
 * @author Huỳnh Cường
 */

public class FrmKeDonThuoc extends javax.swing.JFrame {
    
    KeDonThuocDAO kdtDAO = new KeDonThuocDAO(); // Lấy dữ liệu từ class KeDonThuocDAO.java
    LoaiThuocDAO ltDAO = new LoaiThuocDAO();
    
    SimpleDateFormat date_format = new SimpleDateFormat("dd/MM/yyyy"); // Dùng để sửa thứ tự dd/MM/yyyy
    
    DefaultTableModel tbModel = new DefaultTableModel(); //DefaultTableModel lưu trữ dữ liệu cho JTable trong một Vectors 
    
    int idKedonthuoc = -1;
   
    public FrmKeDonThuoc() {
        initComponents();   
        setLocationRelativeTo(null); // Đưa form ra giữa màn hình khi run 
        fillDataTable();
        LoadDataToArrayList();   
        getCbbLoaiThuoc();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbDSKeDonThuoc = new javax.swing.JLabel();
        lbMaPhieu = new javax.swing.JLabel();
        lbMaThuoc = new javax.swing.JLabel();
        lbSoLuong = new javax.swing.JLabel();
        lbNgayKeDT = new javax.swing.JLabel();
        lbDonViTinh = new javax.swing.JLabel();
        lbStatus = new javax.swing.JLabel();
        txtMaPhieu = new javax.swing.JTextField();
        cbbMaThuoc = new javax.swing.JComboBox<>();
        txtSoLuong = new javax.swing.JTextField();
        cbbDonViTinh = new javax.swing.JComboBox<>();
        txtNgayKeDT = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnResetForm = new javax.swing.JButton();
        btnXuatFileExcel = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TbDSKeDonThuoc = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DANH SÁCH KÊ ĐƠN THUỐC");
        setResizable(false);

        lbDSKeDonThuoc.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lbDSKeDonThuoc.setForeground(new java.awt.Color(255, 0, 0));
        lbDSKeDonThuoc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDSKeDonThuoc.setText("DANH SÁCH KÊ ĐƠN THUỐC");

        lbMaPhieu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbMaPhieu.setText("Mã phiếu:");

        lbMaThuoc.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbMaThuoc.setText("Mã thuốc:");

        lbSoLuong.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbSoLuong.setText("Số lượng:");

        lbNgayKeDT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbNgayKeDT.setText("Ngày kê:");

        lbDonViTinh.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbDonViTinh.setText("Đơn vị tính:");

        lbStatus.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lbStatus.setText("Status:");

        txtMaPhieu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtMaPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaPhieuActionPerformed(evt);
            }
        });

        cbbMaThuoc.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbbMaThuoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbMaThuocActionPerformed(evt);
            }
        });

        txtSoLuong.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtSoLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoLuongActionPerformed(evt);
            }
        });

        cbbDonViTinh.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbbDonViTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Viên", "Hộp", "Ống", "Tuýp" }));
        cbbDonViTinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbDonViTinhActionPerformed(evt);
            }
        });

        txtNgayKeDT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtNgayKeDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNgayKeDTActionPerformed(evt);
            }
        });

        btnThem.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnXoa.setText("Xoá");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnResetForm.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnResetForm.setText("Làm mới");
        btnResetForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetFormActionPerformed(evt);
            }
        });

        btnXuatFileExcel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnXuatFileExcel.setText("Xuất file excel ");
        btnXuatFileExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatFileExcelActionPerformed(evt);
            }
        });

        btnThoat.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        TbDSKeDonThuoc.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        TbDSKeDonThuoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã phiếu KB", "Mã BN", "Họ tên BN", "Ngày sinh", "Giới Tính", "Địa chỉ", "SĐT", "Ghi chú", "Mã thuốc", "Tên thuốc", "Số lượng", "Đơn vị tính", "Ngày kê ", "Mã PK", "Tên PK", "Mã BS", "Họ tên BS", "Ngày sinh", "Giới tính", "Địa chỉ", "SĐT"
            }
        ));
        TbDSKeDonThuoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TbDSKeDonThuocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TbDSKeDonThuoc);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(531, 531, 531)
                .addComponent(lbDSKeDonThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 622, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1480, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbMaPhieu)
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbStatus)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(btnThem)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnXoa))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(txtMaPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(80, 80, 80)
                                        .addComponent(lbMaThuoc)))
                                .addGap(20, 20, 20)
                                .addComponent(cbbMaThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(80, 80, 80)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbSoLuong)
                                        .addGap(20, 20, 20)
                                        .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnResetForm, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(80, 80, 80)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnXuatFileExcel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnThoat))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbDonViTinh)
                                        .addGap(20, 20, 20)
                                        .addComponent(cbbDonViTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(80, 80, 80)
                                        .addComponent(lbNgayKeDT)
                                        .addGap(20, 20, 20)
                                        .addComponent(txtNgayKeDT, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbDSKeDonThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbMaPhieu)
                    .addComponent(txtMaPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbMaThuoc)
                    .addComponent(cbbMaThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbSoLuong)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDonViTinh)
                    .addComponent(cbbDonViTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNgayKeDT)
                    .addComponent(txtNgayKeDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnXoa)
                    .addComponent(btnResetForm)
                    .addComponent(btnXuatFileExcel)
                    .addComponent(btnThoat))
                .addGap(26, 26, 26)
                .addComponent(lbStatus)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     // Hàm load dữ liệu lên cbbMaThuoc
    public void getCbbLoaiThuoc(){
        DefaultComboBoxModel cbbModel = (DefaultComboBoxModel) cbbMaThuoc.getModel();
        for (ClassLoaiThuoc lt : ltDAO.getAllLoaiThuoc()) {
            cbbModel.addElement(lt);
        }
    }
     
    //Hàm lấy dữ liệu từ SQL đưa vào TbDSKeDonThuoc
    public void fillDataTable(){ 
        DefaultTableModel tbModel = (DefaultTableModel) TbDSKeDonThuoc.getModel();
        tbModel.setRowCount(0); // Xoá data trong table
        for (ClassKeDonThuoc kdt : kdtDAO.getAllKeDonThuoc()){
            Object dataRow[] = new Object[21];
           
         /* dataRow[0] = kdt.getMaPhieu();
            dataRow[1] = kdt.getLt().getMaThuoc();
            dataRow[2] = kdt.getLt().getTenThuoc();
            dataRow[3] = kdt.getSoLuong();
            dataRow[4] = kdt.getDonViTinh();
            dataRow[5] = date_format.format(kdt.getNgayKeDT()); // Sửa lại thứ tự dd/mm/yyyy */
            
        // Khai báo thông tin các khoá ngoại, lớp con chứa các thông tin từ lớp cha. Hàm getAllKeDonThuoc bên KeDonThuocDAO.java
            dataRow[0] = kdt.getMaPhieu();
            
            dataRow[1] = kdt.getBn().getMaBN(); //Khoá ngoại ClassBenhNhan
            dataRow[2] = kdt.getBn().getHoTenBN();
            dataRow[3] = date_format.format(kdt.getBn().getNgaySinh()); // Sửa lại thứ tự dd/mm/yyyy 
            dataRow[4] = kdt.getBn().getGioiTinh();
            dataRow[5] = kdt.getBn().getDiaChi();
            dataRow[6] = kdt.getBn().getSoDienThoai();
            dataRow[7] = kdt.getBn().getGhiChu();
          
            dataRow[8] = kdt.getLt().getMaThuoc(); //Khoá ngoại ClassLoaiThuoc
            dataRow[9] = kdt.getLt().getTenThuoc();
           
            dataRow[10] = kdt.getSoLuong();
            dataRow[11] = kdt.getDonViTinh();    
            dataRow[12] = date_format.format(kdt.getNgayKeDT()); // Sửa lại thứ tự dd/mm/yyyy 
           
            dataRow[13] = kdt.getPk().getMaPK(); //Khoá ngoại ClassPhong Kham
            dataRow[14] = kdt.getPk().getTenPK();
           
            dataRow[15] = kdt.getBs().getMaBS(); //Khoá ngoại ClassBacSi
            dataRow[16] = kdt.getBs().getHoTenBS();
            dataRow[17] = date_format.format(kdt.getBs().getNgaySinh()); // Sửa lại thứ tự dd/mm/yyyy 
            dataRow[18] = kdt.getBs().getGioiTinh();
            dataRow[19] = kdt.getBs().getDiaChi();
            dataRow[20] = kdt.getBs().getSoDienThoai();
                       
            tbModel.addRow(dataRow);
        }                       
    }
   
    // Hàm bool kiểm tra đúng, sai. Nhập đầy đủ thông tin mới cho thêm kê đơn thuốc mới
    public boolean checkValidateForm(){
        if (txtMaPhieu.getText().isEmpty()||
            cbbMaThuoc.getSelectedItem().toString().isEmpty()||
            txtSoLuong.getText().isEmpty()||  
            txtNgayKeDT.getText().isEmpty())
       
        {
           // JOptionPane.showMessageDialog(this, "Bạn chưa nhập đủ thông tin!");
            return false;
        }
        else  
        {
            return true;                
        }     
    }
    
    // Lấy dữ liệu đã nhập get vào TbDSKeDonThuoc
    public ClassKeDonThuoc getModel() throws ParseException{
        ClassKeDonThuoc kdt = new ClassKeDonThuoc();
        kdt.setMaPhieu(Integer.parseInt(txtMaPhieu.getText()));
        ClassLoaiThuoc lt = ltDAO.findLoaiThuocByName(cbbMaThuoc.getSelectedItem().toString()); //Xem LoaiThuocDAO.java sẽ thấy hàm tìm kiếm theo tên thuốc, cbbMaThuoc sẽ hiển thị tên thuốc, xem ClassLoaiThuoc dùng @Override trả về TenThuoc
        kdt.setLt(lt);
        kdt.setSoLuong(Integer.parseInt(txtSoLuong.getText()));
        kdt.setDonViTinh(cbbDonViTinh.getSelectedItem().toString());
        kdt.setNgayKeDT(date_format.parse(txtNgayKeDT.getText()));
         
        return kdt;
    }
    
    // Đổ dữ liệu lên form, dùng cho envent Mouse Click và tìm kiếm 
    public void setModel (ClassKeDonThuoc kdt){
        txtMaPhieu.setText(String.valueOf(kdt.getMaPhieu()));
        // Đổ dữ liệu lên combobox Mã thuốc, cbbMaThuoc 
        /*for (ClassLoaiThuoc lt : ltDAO.getAllLoaiThuoc()){
            if (lt.getMaThuoc()==kdt.getLt().getMaThuoc()){
                for (int i=0; i < cbbMaThuoc.getItemCount(); i++){
                    if (lt.getTenThuoc().equals(String.valueOf(cbbMaThuoc.getItemAt(i)))){
                        cbbMaThuoc.setSelectedIndex(i);
                    }
                }
            }
        } */
       
        txtSoLuong.setText(String.valueOf(kdt.getSoLuong()));
        cbbDonViTinh.setSelectedItem(kdt.getDonViTinh());
        txtNgayKeDT.setText(date_format.format(kdt.getNgayKeDT()));
                  
    }
    
    // Hàm thêm kê đơn thuốc mới
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
       if (!checkValidateForm())
       {
           JOptionPane.showMessageDialog(this, "Bạn chưa nhập đầy đủ thông tin!"); //Thanh thông báo hiện lên
           lbStatus.setText("Bạn chưa nhập đầy đủ thông tin!"); //Thông báo qua dòng labelStatus
           lbStatus.setForeground(Color.red);
       }
       else{
           try {
               ClassKeDonThuoc kdt = getModel();
              // System.out.println("=>"+pk.toString());
               if (kdtDAO.add(kdt)>0) {
                   JOptionPane.showMessageDialog(this, "Thêm kê đơn thuốc mới thành công!"); //Thanh thông báo hiện lên
                   lbStatus.setText("Thêm kê đơn thuốc mới thành công!"); //Thông báo qua dòng labelStatus
                   lbStatus.setForeground(Color.blue);
                   fillDataTable();
                   LoadDataToArrayList(); 
               }
               else{
                   JOptionPane.showMessageDialog(this, "Thêm kê đơn thuốc mới thất bại!"); 
                   lbStatus.setText("Thêm kê đơn thuốc mới thất bại!");
                   lbStatus.setForeground(Color.red);
               }
           } catch (ParseException ex) {
               System.out.println("Error:"+ex.toString());
           }      
       }               
    }//GEN-LAST:event_btnThemActionPerformed

    private void txtMaPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaPhieuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaPhieuActionPerformed

    // Hàm xoá
    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
    if (kdtDAO.delete(idKedonthuoc)>0){
        JOptionPane.showMessageDialog(this, "Xoá thông tin kê đơn thuốc thành công!");
        lbStatus.setText("Xoá thông tin kê đơn thuốc thành công!"); //Thông báo qua dòng labelStatus
        lbStatus.setForeground(Color.blue);
        fillDataTable();
        LoadDataToArrayList(); 
    }
    else{
        JOptionPane.showMessageDialog(this, "Xoá thông tin kê đơn thuốc thất bại!");
        lbStatus.setText("Xoá thông tin kê đơn thuốc thất bại!"); //Thông báo qua dòng labelStatus
        lbStatus.setForeground(Color.red);
    }   
    }//GEN-LAST:event_btnXoaActionPerformed

    // Hàm thoát
    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
     if (JOptionPane.showConfirmDialog(this, "Bạn có muốn thoát ?", "Thông báo",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    dispose();
            }                    
    }//GEN-LAST:event_btnThoatActionPerformed
  
    //Hàm reset lại form
    public void resetForm(){
        txtMaPhieu.setText("");
        txtSoLuong.setText("");
        txtNgayKeDT.setText("");
        
        txtMaPhieu.setEnabled(true);
    }
    //
    private void btnResetFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetFormActionPerformed
        resetForm();
    }//GEN-LAST:event_btnResetFormActionPerformed
    
    // Hàm LoadDataToArrayList
    ArrayList<ClassKeDonThuoc02> arr = new ArrayList<ClassKeDonThuoc02>();
    public void LoadDataToArrayList()
    {
        arr.clear();
        try{
            String user="sa";
            String pass="123456";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=DoAnJavaQLPhongKhamTuNhan";
            Connection con = DriverManager.getConnection(url, user, pass);
            String sql = "select * from Table_KeDonThuoc";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){ 
                int maPhieu = rs.getInt("MaPhieu");
                int maThuoc = rs.getInt("MaThuoc");
                int soLuong = rs.getInt("SoLuong");
                String donViTinh = rs.getString("DonViTinh");
                Date ngayKedonthuoc = rs.getDate("NgayKeDT");
               
                ClassKeDonThuoc02 kedonthuoc02 = new ClassKeDonThuoc02(maPhieu, maThuoc, soLuong, donViTinh, ngayKedonthuoc);
                arr.add(kedonthuoc02);
            }
            con.close();
        } 
        catch(Exception ex){
            System.out.println (ex.toString());
        }
    }
    
    // Hàm xuất file excel
    private void btnXuatFileExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatFileExcelActionPerformed
        try{
            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet sheet = workbook.createSheet("DanhSachKeDonThuoc");
            XSSFRow row = null;
            XSSFCell cell = null;
            row = sheet.createRow(5); // Tạo ra 5 dòng trống đầu tiên trong excel
            cell = row.createCell(0,CellType.STRING);
            cell.setCellValue("STT");
            
            cell = row.createCell(1,CellType.STRING);
            cell.setCellValue("Mã phiếu");
            
            cell = row.createCell(2,CellType.STRING);
            cell.setCellValue("Mã thuốc");
            
            cell = row.createCell(3,CellType.STRING);
            cell.setCellValue("Số lượng");
            
             cell = row.createCell(4,CellType.STRING);
            cell.setCellValue("Đơn vị tính");
            
            cell = row.createCell(5,CellType.STRING);
            cell.setCellValue("Ngày kê đơn thuốc");
            
            
            for (int i = 0; i<arr.size(); i++)
            {
                ClassKeDonThuoc02 kedonthuoc02 = arr.get(i);
                row = sheet.createRow(6+i);
                
                cell = row.createCell(0,CellType.NUMERIC);
                cell.setCellValue(i+1);
                
                cell = row.createCell(1,CellType.NUMERIC);
                cell.setCellValue(arr.get(i).getMaPhieu());
                
                cell = row.createCell(2,CellType.NUMERIC);
                cell.setCellValue(arr.get(i).getMaThuoc());
                
                cell = row.createCell(3,CellType.NUMERIC);
                cell.setCellValue(arr.get(i).getSoLuong());
                
                cell = row.createCell(4,CellType.STRING);
                cell.setCellValue(arr.get(i).getDonViTinh());
                
                cell = row.createCell(5,CellType.STRING);
                cell.setCellValue(arr.get(i).getNgayKeDT());
    
            }
            
            File f = new File ("C://Users//Huynh Cuong//Desktop//DanhSachKeDonThuoc.xlsx");
            try{
                FileOutputStream fis = new FileOutputStream(f);
                workbook.write(fis);
                fis.close();
            } catch (FileNotFoundException ex){
                System.out.println (ex.toString());
            }
            catch (IOException ex){
                System.out.println (ex.toString());
            }
            
            JOptionPane.showMessageDialog(this, "Xuất file excel thành công!");
            lbStatus.setText("Xuất file excel thành công!");
            lbStatus.setForeground(Color.blue);
            
        } catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Xuất file excel thất bại!");
            lbStatus.setText("Xuất file excel thất bại!");
            lbStatus.setForeground(Color.red);
            System.out.println (ex.toString());
        }
    }//GEN-LAST:event_btnXuatFileExcelActionPerformed
 
    // Sử dụng event Mouse Click, khi click vào TbDSKeDonThuoc sẽ đổ dữ liệu lên form
    private void TbDSKeDonThuocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TbDSKeDonThuocMouseClicked
        //   if (evt.getClickCount()==2) // Double click
        //  {
        //    txtMaPhieu.setEnabled(false); // Mục Mã kê đơn thuốc bị ẩn để không được sửa khoá chính
            int position = TbDSKeDonThuoc.rowAtPoint(evt.getPoint()); //Vị trí đang chọn
            idKedonthuoc = Integer.parseInt(TbDSKeDonThuoc.getValueAt(position, 0).toString());
            ClassKeDonThuoc kedonthuoc = kdtDAO.findKeDonThuocByID(idKedonthuoc);
            if (kedonthuoc !=null){
                setModel(kedonthuoc);
            }
            else{

            } 
            //      }
    }//GEN-LAST:event_TbDSKeDonThuocMouseClicked

    private void txtSoLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoLuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSoLuongActionPerformed

    private void txtNgayKeDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNgayKeDTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNgayKeDTActionPerformed

    private void cbbMaThuocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbMaThuocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbMaThuocActionPerformed

    private void cbbDonViTinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbDonViTinhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbDonViTinhActionPerformed

    //
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmKeDonThuoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmKeDonThuoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmKeDonThuoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmKeDonThuoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
     

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmKeDonThuoc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TbDSKeDonThuoc;
    private javax.swing.JButton btnResetForm;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXuatFileExcel;
    private javax.swing.JComboBox<String> cbbDonViTinh;
    private javax.swing.JComboBox<String> cbbMaThuoc;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbDSKeDonThuoc;
    private javax.swing.JLabel lbDonViTinh;
    private javax.swing.JLabel lbMaPhieu;
    private javax.swing.JLabel lbMaThuoc;
    private javax.swing.JLabel lbNgayKeDT;
    private javax.swing.JLabel lbSoLuong;
    private javax.swing.JLabel lbStatus;
    private javax.swing.JTextField txtMaPhieu;
    private javax.swing.JTextField txtNgayKeDT;
    private javax.swing.JTextField txtSoLuong;
    // End of variables declaration//GEN-END:variables
}
